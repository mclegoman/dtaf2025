plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id 'maven-publish'
}
group = project.maven_group
version = project.mod_version + project.mc_version

base {
	archivesName = project.archives_base_name
}
runClient.doFirst {
	args += ['--username', "dtaf2025${new Random().nextInt(1000)}"]
}
loom {
	mods {
		"dtaf2025" {
			sourceSet("main")
		}
	}
	accessWidenerPath = file("src/main/resources/dtaf2025.accesswidener")
}
repositories {
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.terraformersmc.com/releases/' }
	mavenCentral()
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	maven { url "https://maven.quiltmc.org/repository/release" }
}
dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft}"
	mappings "net.fabricmc:yarn:${project.mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api}"
	include(modImplementation("maven.modrinth:luminance:${project.luminance}"))
	modImplementation("org.quiltmc:quilt-config:${project.quilt_config}")
	modImplementation("org.quiltmc.quilt-config.serializers:toml:${project.quilt_config}")
	modImplementation("org.quiltmc.quilt-config.serializers:json5:${project.quilt_config}")
	modImplementation("com.electronwill.night-config:toml:${project.toml}")
	modImplementation("com.electronwill.night-config:core:${project.toml}")

	// Development Environment Only
	modImplementation "com.ptsmods:devlogin:3.4.1"
	modCompileOnly "com.terraformersmc:modmenu:${project.modmenu}"
}
processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version
	}
}
tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}
java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}
jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
	}
}
tasks.register("quickPlaySingleplayer") {
	group = 'dtaf2025'
	description = 'Uses Quick Play to join singleplayer world `New World` on launch.'
	dependsOn(tasks.runClient.args(['--quickPlaySingleplayer', 'New World']))
}
tasks.register("quickPlayMultiplayer") {
	group = 'dtaf2025'
	description = 'Uses Quick Play to join multiplayer server `localhost:25565` on launch.'
	dependsOn(tasks.runClient.args(['--quickPlayMultiplayer', 'localhost:25565']))
}
tasks.register("runClientLoggedIn") {
	group = 'dtaf2025'
	description = 'Uses DevLogin to login to your Minecraft Account'
	dependsOn(tasks.runClient.args(['--msa']))
}
tasks.register("quickPlaySingleplayerLoggedIn") {
	group = 'dtaf2025'
	description = 'Uses Quick Play to join singleplayer world `New World` on launch and uses DevLogin to login to your Minecraft Account.'
	dependsOn(tasks.runClient.args(['--quickPlaySingleplayer', 'New World', '--msa']))
}
tasks.register("quickPlayMultiplayerLoggedIn") {
	group = 'dtaf2025'
	description = 'Uses Quick Play to join multiplayer server `localhost:25565` on launch and uses DevLogin to login to your Minecraft Account.'
	dependsOn(tasks.runClient.args(['--quickPlayMultiplayer', 'localhost:25565', '--msa']))
}